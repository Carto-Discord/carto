name: IntegrationTest

on:
  workflow_call:
    inputs:
      python-version:
        default: "3.10"
        required: false
        type: string
      node-version:
        default: "14"
        required: false
        type: string
    secrets:
      discord_public_key:
        required: true

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: api
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ inputs.python-version }}

      - name: Set up Node.JS
        uses: actions/setup-node@v2
        with:
          node-version: ${{ inputs.node-version }}

      - uses: hashicorp/setup-terraform@v1

      - uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ env.pythonLocation }}-${{ hashFiles('requirements.txt') }}-${{ hashFiles('dev-requirements.txt') }}

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r api/requirements.txt

      - name: Cache node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-

      - name: Build Client
        working-directory: client
        run: |
          npm ci
          npm run build
          npm run build:package

      - name: Start Localstack
        run: docker-compose -f localstack.yml up -d

      - name: Build test environment
        working-directory: deployment/aws/test
        run: |
          terraform init
          terraform apply \
            -var="discord_public_key=${{ secrets.discord_public_key }}" \
            -var="api_trigger_url=http://localhost:8080" \
            -auto-approve

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          push: false
          tags: carto/api:latest

      - name: Run API Container
        run: |
          docker run -d -p 8080:8080 \ 
          -e DRY_RUN='true' \ 
          -e AWS_ENDPOINT='http://localhost:4566' \
          carto/api:latest

      - name: Stop Localstack
        run: docker-compose -f localstack.yml down
