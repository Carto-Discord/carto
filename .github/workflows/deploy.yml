name: Deploy

on:
  workflow_call:
    inputs:
      app_name:
        default: "carto-bot"
        required: false
        type: string
    secrets:
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true
      discord_public_key:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: deployment
    env:
      DOCKER_REPO: api
      DOCKER_TAG: latest
    steps:
      - uses: actions/checkout@v2

      - uses: hashicorp/setup-terraform@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: eu-central-1

      - name: Create ECR resource
        run: |
          terraform apply \
            -target="module.ecr" \
            -var="app_name=${{ secrets.app_name }}" \
            -var="discord_public_key=${{ secrets.discord_public_key }}" \
            -auto-approve

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ inputs.app_name }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Download Client Artifact
        uses: actions/download-artifact@v2
        with:
          name: carto-client
          path: client/package

      - name: Initialise terraform
        run: terraform init

      - name: Apply terraform
        run: |
          terraform apply \
            -var="app_name=${{ secrets.app_name }}" \
            -var="discord_public_key=${{ secrets.discord_public_key }}" \
            -auto-approve
